{
  "name": "TinyWrite",
  "version": "0.5.3",
  "main": "dist/index.js",
  "build": {
    "artifactName": "TinyWrite.${ext}",
    "appId": "com.github.dennis84.tinywrite",
    "files": [
      "dist/**",
      "!dist/app"
    ],
    "mac": {
      "category": "public.app-category.utilities"
    },
    "protocols": [
      {
        "name": "TinyWrite",
        "schemes": [
          "tinywrite"
        ]
      }
    ],
    "directories": {
      "output": "dist/app"
    },
    "fileAssociations": [
      {
        "ext": "md",
        "description": "Markdown File",
        "mimeType": "text/markdown",
        "name": "Markdown File",
        "role": "Editor"
      }
    ]
  },
  "dependencies": {
    "@codemirror/autocomplete": "^0.19.3",
    "@codemirror/closebrackets": "^0.19.0",
    "@codemirror/commands": "^0.19.3",
    "@codemirror/highlight": "^0.19.4",
    "@codemirror/lang-cpp": "^0.19.1",
    "@codemirror/lang-css": "^0.19.1",
    "@codemirror/lang-html": "^0.19.1",
    "@codemirror/lang-java": "^0.19.1",
    "@codemirror/lang-javascript": "^0.19.1",
    "@codemirror/lang-json": "^0.19.1",
    "@codemirror/lang-markdown": "^0.19.1",
    "@codemirror/lang-python": "^0.19.2",
    "@codemirror/lang-rust": "^0.19.1",
    "@codemirror/lang-sql": "^0.19.3",
    "@codemirror/lang-xml": "^0.19.1",
    "@codemirror/language": "^0.19.2",
    "@codemirror/legacy-modes": "^0.19.0",
    "@codemirror/lint": "^0.19.0",
    "@codemirror/matchbrackets": "^0.19.1",
    "@codemirror/state": "^0.19.1",
    "@codemirror/stream-parser": "^0.19.2",
    "@codemirror/view": "^0.19.6",
    "@ddietr/codemirror-themes": "^1.0.8",
    "@emotion/css": "^11.1.3",
    "@emotion/react": "^11.4.1",
    "@emotion/styled": "^11.3.0",
    "date-fns": "^2.23.0",
    "devicon": "devicons/devicon#master",
    "electron-log": "^4.4.1",
    "electron-updater": "^4.3.9",
    "file-type": "^16.5.3",
    "idb": "^6.1.3",
    "markdown-it": "^12.2.0",
    "prettier": "^2.4.0",
    "prosemirror-commands": "^1.1.10",
    "prosemirror-dropcursor": "^1.3.5",
    "prosemirror-example-setup": "^1.1.2",
    "prosemirror-gapcursor": "^1.1.5",
    "prosemirror-history": "^1.2.0",
    "prosemirror-inputrules": "^1.1.3",
    "prosemirror-keymap": "^1.1.4",
    "prosemirror-markdown": "^1.5.2",
    "prosemirror-model": "^1.14.3",
    "prosemirror-schema-list": "^1.1.5",
    "prosemirror-state": "^1.3.4",
    "prosemirror-transform": "^1.3.2",
    "prosemirror-view": "^1.20.1",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "uuid": "^8.3.2",
    "y-prosemirror": "^1.0.9",
    "y-websocket": "^1.3.16",
    "yjs": "^13.5.12"
  },
  "devDependencies": {
    "@types/jest": "^27.0.1",
    "@types/markdown-it": "^12.2.1",
    "@types/prosemirror-dropcursor": "^1.0.3",
    "@types/prosemirror-history": "^1.0.3",
    "@types/prosemirror-inputrules": "^1.0.4",
    "@types/prosemirror-keymap": "^1.0.4",
    "@types/prosemirror-markdown": "^1.5.2",
    "@types/prosemirror-model": "^1.13.2",
    "@types/prosemirror-schema-list": "^1.0.3",
    "@types/prosemirror-state": "^1.2.7",
    "@types/react": "^17.0.20",
    "@types/react-dom": "^17.0.9",
    "@types/uuid": "^8.3.1",
    "@typescript-eslint/eslint-plugin": "^4.31.0",
    "@typescript-eslint/parser": "^4.31.0",
    "@vitejs/plugin-react-refresh": "^1.3.6",
    "electron": "^14.0.0",
    "electron-builder": "^22.11.7",
    "eslint": "^7.32.0",
    "eslint-plugin-react": "^7.25.1",
    "jest": "^27.1.1",
    "jest-playwright-preset": "^1.7.0",
    "playwright": "^1.14.1",
    "rollup-plugin-visualizer": "^5.5.2",
    "ts-jest": "^27.0.5",
    "tslib": "^2.3.1",
    "typescript": "^4.4.2",
    "vite": "^2.5.6"
  },
  "optionalDependencies": {
    "dmg-license": "^1.0.9"
  },
  "hasInstallScript": true,
  "scripts": {
    "web": "vite",
    "app": "npm run tsc && NODE_ENV=dev electron dist README.md & vite",
    "tsc": "tsc --outDir dist index.ts preload.ts",
    "build": "npm run lint && vite build --base './'",
    "dist": "npm run build && npm run tsc && electron-builder",
    "lint": "eslint . --ext .ts,.tsx",
    "test": "jest && jest --runInBand --config ./jest.integration.config.js"
  },
  "browserslist": [
    "last 1 Chrome versions"
  ]
}
